name: WildFly Scan

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Run at 6:13 every day
  schedule:
     - cron: "13 6 * * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  scan-matrix:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        version: [35.0.1.Final, 36.0.1.Final, 37.0.1.Final, 38.0.0.Final]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Cache the instllation
      - name: Cache WildFly Installation
        id: wildfly-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/work/aphrodite/aphrodite/wildfly
          key: wildfly-${{ matrix.version}}
          fail-on-cache-miss: true

      # Restore Dependency Check CLI from Cache
      - name: Cache Dependency Check Installation
        id: dependency-check-cli-installation
        uses: actions/cache/restore@v4
        with:
          path: ~/work/aphrodite/aphrodite/dependency-check
          key: dependency-check-${{ vars.DEPENDENCY_CHECK_VERSION }}
          fail-on-cache-miss: true

      # Caching for the Dependency Check Database
      #
      # A we have a unique run IT / Attempt we will never restore
      # using the key, instead we restore the most recent and save
      # using the unique key.
      - name: Cache Dependency Check Database
        id: cache-database
        uses: actions/cache@v4
        with:
          path: ~/work/aphrodite/aphrodite/owasp-database
          key: owasp-database-${{ github.run_id }}-${{ github.run_attempt }}-${{ strategy.job-index}}
          restore-keys: owasp-database-

      # Populate a properties file with secrets
      - name: Populate Dependency Check Properties
        run: |
          echo "analyzer.ossindex.password=${{ secrets.OSS_INDEX_PASSWORD }}" > dependency-check.properties
          ls -l
          cat dependency-check.properties

      # Perform SCA Scan
      - name: Perform SCA Scan
        run: ./dependency-check/bin/dependency-check.sh --project="WildFly ${{ matrix.version}}" --scan="wildfly" --noupdate --suppression=owasp-suppressions/owasp-suppressions.xml --data=owasp-database --format=HTML --format=JSON --nvdApiKey=${{ secrets.NVD_API_KEY }} --ossIndexUsername=${{ secrets.OSS_INDEX_USERNAME }} --propertyfile=dependency-check.properties --log=dependency-check.log

      # Upload the log files
      - name: Upload Scan Results
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: scan-results-${{ matrix.version }}
          path: ~/work/aphrodite/aphrodite/dependency-check-report.*

      # Upload the log files
      - name: Upload Log File
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: log-files-${{ matrix.version }}
          path: ~/work/**/*.log
